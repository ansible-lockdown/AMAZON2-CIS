---

- name: "5.3.1 | PATCH | Ensure AIDE is installed"
  when:
      - amazon2cis_config_aide
      - amazon2cis_rule_5_3_1
  tags:
      - level1-server
      - level1-workstation
      - automated
      - aide
      - NIST800-53R5_AU-2
      - patch
      - rule_5.3.1
  block:
      - name: "5.3.1 | PATCH | Ensure AIDE is installed | Install AIDE"
        ansible.builtin.package:
            name: aide
            state: present

      - name: "5.3.1 | PATCH | Ensure AIDE is installed | Configure AIDE"
        ansible.builtin.shell: /usr/sbin/aide --init
        changed_when: false
        failed_when: false
        async: 45
        poll: 0
        args:
            creates: /var/lib/aide/aide.db.new.gz
        when: not ansible_check_mode

      - name: "5.3.1 | PATCH | Ensure AIDE is installed  | copy AIDE DB"
        ansible.builtin.copy:
            src: /var/lib/aide/aide.db.new.gz
            dest: /var/lib/aide/aide.db.gz
            remote_src: true

- name: "5.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  when:
      - amazon2cis_rule_5_3_2
      - amazon2cis_config_aide
      - not system_is_ec2
  tags:
      - level1-server
      - level1-workstation
      - automated
      - aide
      - NIST800-53R5_AU-2
      - file_integrity
      - patch
      - rule_5.3.2
  block:
      - name: "5.3.2 | PATCH | Ensure filesystem integrity is regularly checked | cron"
        when: amazon2cis_aide_scan == "cron"
        ansible.builtin.cron:
            name: Run AIDE integrity check
            cron_file: "{{ amazon2cis_aide_cron['cron_file'] }}"
            user: "{{ amazon2cis_aide_cron['cron_user'] }}"
            minute: "{{ amazon2cis_aide_cron['aide_minute'] | default('0') }}"
            hour: "{{ amazon2cis_aide_cron['aide_hour'] | default('5') }}"
            day: "{{ amazon2cis_aide_cron['aide_day'] | default('*') }}"
            month: "{{ amazon2cis_aide_cron['aide_month'] | default('*') }}"
            weekday: "{{ amazon2cis_aide_cron['aide_weekday'] | default('*') }}"
            job: "{{ amazon2cis_aide_cron['aide_job'] }}"

      - name: "5.3.2 | PATCH | Ensure filesystem integrity is regularly checked | timer"
        when: amazon2cis_aide_scan == "timer"
        ansible.builtin.systemd:
            name: "{{ item.name }}"
            enabled: true
            state: "{{ item.state | default(omit)}}"
        loop:
            - { name: 'aidecheck.service' }
            - { name: 'aidecheck.timer', state: started }
