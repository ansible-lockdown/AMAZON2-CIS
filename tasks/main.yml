---

- name: Check OS version and family
  when:
      - os_check
  ansible.builtin.assert:
      that: (ansible_facts.distribution == 'Amazon' and ansible_facts.distribution_major_version is version_compare('2', '=='))
      fail_msg: "This role can only be run against Supported OSs. {{ ansible_facts.distribution }} {{ ansible_facts.distribution_major_version }} is not supported."
      success_msg: "This role is running against a supported OS {{ ansible_facts.distribution }} {{ ansible_facts.distribution_major_version }}"
  tags:
      - always

- name: Check ansible version
  ansible.builtin.assert:
      that: ansible_version.full is version_compare(min_ansible_version, '>=')
      fail_msg: "You must use Ansible {{ min_ansible_version }} or greater"
      success_msg: "This role is running a supported version of ansible {{ ansible_version.full }} >= {{ min_ansible_version }}"
  tags:
      - always

- name: Ensure root password is set
  when:
      - amazon2cis_rule_4_5_2_4
  tags:
      - always
  block:
      - name: Ensure root password is set
        ansible.builtin.shell: passwd -S root | egrep -e "(Password set, SHA512 crypt|Password locked)"
        changed_when: false
        failed_when: false
        register: root_passwd_set

      - name: Ensure root password is set
        ansible.builtin.assert:
            that: root_passwd_set.rc == 0
            fail_msg: "You have rule 4.5.2.4 enabled this requires that you have a root password set"
            success_msg: "You have a root password set"

- name: "check sugroup exists if used"
  block:
      - name: "Check su group exists if defined"
        ansible.builtin.command: grep -w "{{ amazon2cis_sugroup }}" /etc/group
        changed_when: false
        failed_when: sugroup_exists.rc >= 2
        register: sugroup_exists

      - name: Check sugroup if defined exists before continuing
        ansible.builtin.assert:
            that: sugroup_exists.rc == 0
            msg: "The variable amazon2cis_sugroup is defined but does not exist please rectify"
  when:
      - amazon2cis_sugroup is defined
      - amazon2cis_rule_4_3_7
  tags:
      - rule_4.3.7

- name: Run pre-reqs
  ansible.builtin.import_tasks:
      file: check_prereqs.yml
  tags:
      - always
      - prereqs

- name: Run prelim tasks
  ansible.builtin.import_tasks:
      file: prelim.yml
  tags:
      - prelim_tasks
      - always

- name: Gather the package facts
  ansible.builtin.package_facts:
      manager: auto
  tags:
      - always

- name: Import section 1 tasks
  ansible.builtin.import_tasks:
      file: section_1/main.yml
  when: amazon2cis_section1
  tags:
      - amazon2cis_section1

- name: Import section 2 tasks
  ansible.builtin.import_tasks:
      file: section_2/main.yml
  when: amazon2cis_section2
  tags:
      - amazon2cis_section2

- name: Import section 3 tasks
  ansible.builtin.import_tasks:
      file: section_3/main.yml
  when: amazon2cis_section3
  tags:
      - amazon2cis_section3

- name: Import section 4 tasks
  ansible.builtin.import_tasks:
      file: section_4/main.yml
  when: amazon2cis_section4
  tags:
      - amazon2cis_section4

- name: Import section 5 tasks
  ansible.builtin.import_tasks:
      file: section_5/main.yml
  when: amazon2cis_section5
  tags:
      - amazon2cis_section5

- name: Import section 6 tasks
  ansible.builtin.import_tasks:
      file: section_6/main.yml
  when: amazon2cis_section6
  tags:
      - amazon2cis_section6

- name: Run auditd logic
  when:
      - update_audit_template
  tags:
      - always
  ansible.builtin.import_tasks:
      file: auditd.yml

- name: Run post remediation tasks
  tags:
      - post_tasks
      - always
  ansible.builtin.import_tasks:
      file: post.yml

- name: Run post_remediation audit
  when:
      - run_audit
  tags:
      - run_audit
  ansible.builtin.import_tasks:
      file: post_remediation_audit.yml

- name: Show Audit Summary
  when:
      - run_audit
  tags:
      - run_audit
  ansible.builtin.debug:
      msg: "{{ audit_results.split('\n') }}"

- name: Output Warning count and control IDs affected
  tags:
      - always
  ansible.builtin.debug:
      msg: "You have {{ warn_count }} warning(s) that require investigating that are related to the following benchmark ID(s) {{ warn_control_list }}"
